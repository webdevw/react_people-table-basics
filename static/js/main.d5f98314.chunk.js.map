{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","App","Loader","PersonLink","person","isSelected","slug","name","sex","born","died","motherName","fatherName","mother","father","PeopleTable","peopleData","selectedPerson","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeopleData","isError","setIsError","useParams","fullPeopleData","peopleArray","find","human","Object","assign","getDataPeoples","data","newData","useEffect","length","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.d5f98314.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  isSelected: boolean,\n};\n\nexport const PersonLink: FC<Props> = ({ person, isSelected }) => {\n  const {\n    slug,\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </Link>\n        ) : motherName || '-'}\n      </td>\n      <td>\n        {father ? (\n          <Link\n            to={`/people/${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        ) : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  peopleData: Person[],\n  selectedPerson: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peopleData,\n  selectedPerson,\n}) => {\n  const isSelected = (person: Person) => person.slug === selectedPerson;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleData.map((person) => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            isSelected={isSelected(person)}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\n\nexport const PeoplePage = () => {\n  const [peopleData, setPeopleData] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const fullPeopleData = (peopleArray: Person[]) => {\n    return peopleArray.map((person) => {\n      const mother = peopleArray.find(\n        (human) => human.name === person.motherName,\n      );\n      const father = peopleArray.find(\n        (human) => human.name === person.fatherName,\n      );\n\n      return Object.assign(person, { mother, father });\n    });\n  };\n\n  const getDataPeoples = async () => {\n    try {\n      const data = await getPeople();\n      const newData = fullPeopleData(data);\n\n      setPeopleData(newData);\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    getDataPeoples();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {(peopleData === null && !isError) && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(peopleData && !peopleData.length) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!peopleData?.length && (\n            <PeopleTable\n              peopleData={peopleData}\n              selectedPerson={slug}\n            />\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route index element={<HomePage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}